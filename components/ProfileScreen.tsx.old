import React, { useState } from 'react';
import { View, Text, ScrollView, TouchableOpacity } from 'react-native';
import { StatusBar } from 'expo-status-bar';
import Animated, { FadeInUp, FadeInLeft } from 'react-native-reanimated';
import { Card } from './ui/Card';
import { Button } from './ui/Button';
import { InputField } from './ui/InputField';

// Sample user profile data
const sampleUser = {
  id: '1',
  name: 'Sarah El Mansouri',
  email: 'sarah.elmansouri@gmail.com',
  university: 'Hassan II University',
  year: 'Third Year',
  major: 'Computer Science',
  avatar: 'https://via.placeholder.com/120x120',
  verified: true,
  memberSince: 'January 2024',
  rating: 4.9,
  preferences: {
    budget: '2000-3000 MAD',
    location: 'Casablanca',
    roomType: 'Single Room',
    lifestyle: 'Quiet Study Environment'
  },
  stats: {
    matches: 45,
    views: 128,
    saves: 23
  }
};

export const ProfileScreen = () => {
  const [isEditing, setIsEditing] = useState(false);
  const [activeTab, setActiveTab] = useState<'profile' | 'preferences' | 'activity'>('profile');

  return (
    <View className="flex-1 bg-neutral-50">
      <StatusBar style="dark" />
      
      <ScrollView 
        className="flex-1" 
        showsVerticalScrollIndicator={false}
        contentInsetAdjustmentBehavior="automatic"
      >
        {/* Header Section */}
        <Animated.View 
          entering={FadeInUp.delay(100).springify()}
          className="pt-16 pb-6 px-6 bg-gradient-to-br from-primary-500 to-primary-600"
        >
          <View className="flex-row justify-between items-start mb-6">
            <TouchableOpacity className="w-10 h-10 bg-white/20 rounded-2xl items-center justify-center">
              <Text className="text-white text-lg">←</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
              className="w-10 h-10 bg-white/20 rounded-2xl items-center justify-center"
              onPress={() => setIsEditing(!isEditing)}
            >
              <Text className="text-white text-lg">{isEditing ? '✓' : '✏️'}</Text>
            </TouchableOpacity>
          </View>

          {/* Profile Header */}
          <View className="items-center">
            <View className="relative mb-4">
              <View className="w-28 h-28 bg-white rounded-full items-center justify-center shadow-ios-lg">
                <Text className="text-primary-500 text-4xl font-bold">SE</Text>
              </View>
              {sampleUser.verified && (
                <View className="absolute -bottom-1 -right-1 w-8 h-8 bg-success rounded-full items-center justify-center border-3 border-white">
                  <Text className="text-white text-sm">✓</Text>
                </View>
              )}
            </View>
            
            <Text className="text-white text-3xl font-bold mb-2">{sampleUser.name}</Text>
            <Text className="text-white/80 text-lg mb-1">{sampleUser.university}</Text>
            <Text className="text-white/70 text-md">{sampleUser.major} • {sampleUser.year}</Text>
            
            {/* Rating */}
            <View className="flex-row items-center mt-4 bg-white/20 px-4 py-2 rounded-full">
              <Text className="text-warning text-lg mr-2">⭐</Text>
              <Text className="text-white font-bold text-lg">{sampleUser.rating}</Text>
              <Text className="text-white/80 text-md ml-1">rating</Text>
            </View>
          </View>
        </Animated.View>

        {/* Stats Cards */}
        <Animated.View 
          entering={FadeInUp.delay(200).springify()}
          className="flex-row px-6 -mt-6 mb-6 gap-3"
        >
          <Card variant="elevated" className="flex-1 items-center" padding="md">
            <Text className="text-2xl font-bold text-primary-500">{sampleUser.stats.matches}</Text>
            <Text className="text-neutral-600 text-sm font-medium">Matches</Text>
          </Card>
          
          <Card variant="elevated" className="flex-1 items-center" padding="md">
            <Text className="text-2xl font-bold text-secondary-500">{sampleUser.stats.views}</Text>
            <Text className="text-neutral-600 text-sm font-medium">Views</Text>
          </Card>
          
          <Card variant="elevated" className="flex-1 items-center" padding="md">
            <Text className="text-2xl font-bold text-warning">{sampleUser.stats.saves}</Text>
            <Text className="text-neutral-600 text-sm font-medium">Saved</Text>
          </Card>
        </Animated.View>

        {/* Tab Navigation */}
        <Animated.View 
          entering={FadeInUp.delay(300).springify()}
          className="px-6 mb-6"
        >
          <ScrollView 
            horizontal 
            showsHorizontalScrollIndicator={false}
            className="flex-row gap-3"
          >
            {[
              { key: 'profile' as const, label: 'Profile', icon: '👤' },
              { key: 'preferences' as const, label: 'Preferences', icon: '⚙️' },
              { key: 'activity' as const, label: 'Activity', icon: '📊' }
            ].map((tab, index) => (
              <Animated.View key={tab.key} entering={FadeInLeft.delay(300 + index * 50).springify()}>
                <TouchableOpacity
                  className={`px-6 py-3 rounded-2xl flex-row items-center shadow-ios ${
                    activeTab === tab.key 
                      ? 'bg-primary-500' 
                      : 'bg-white'
                  }`}
                  onPress={() => setActiveTab(tab.key)}
                  activeOpacity={0.8}
                >
                  <Text className="text-lg mr-2">{tab.icon}</Text>
                  <Text className={`font-medium text-md ${
                    activeTab === tab.key 
                      ? 'text-white' 
                      : 'text-neutral-700'
                  }`}>
                    {tab.label}
                  </Text>
                </TouchableOpacity>
              </Animated.View>
            ))}
          </ScrollView>
        </Animated.View>

        {/* Tab Content */}
        <View className="px-6">
          {activeTab === 'profile' && (
            <Animated.View entering={FadeInUp.delay(400).springify()}>
              <Card variant="elevated" padding="lg" className="mb-6">
                <Text className="text-xl font-bold text-neutral-800 mb-6">Personal Information</Text>
                
                <View className="gap-4">
                  <InputField
                    label="Full Name"
                    placeholder="Enter your full name"
                    value={sampleUser.name}
                    onChangeText={() => {}}
                    disabled={!isEditing}
                    leftIcon={<Text className="text-neutral-400 text-lg">👤</Text>}
                  />
                  
                  <InputField
                    label="Email"
                    placeholder="Enter your email"
                    value={sampleUser.email}
                    onChangeText={() => {}}
                    disabled={!isEditing}
                    keyboardType="email-address"
                    leftIcon={<Text className="text-neutral-400 text-lg">📧</Text>}
                  />
                  
                  <InputField
                    label="University"
                    placeholder="Enter your university"
                    value={sampleUser.university}
                    onChangeText={() => {}}
                    disabled={!isEditing}
                    leftIcon={<Text className="text-neutral-400 text-lg">🎓</Text>}
                  />
                  
                  <View className="flex-row gap-3">
                    <InputField
                      label="Year"
                      placeholder="Year"
                      value={sampleUser.year}
                      onChangeText={() => {}}
                      disabled={!isEditing}
                      className="flex-1"
                    />
                    
                    <InputField
                      label="Major"
                      placeholder="Major"
                      value={sampleUser.major}
                      onChangeText={() => {}}
                      disabled={!isEditing}
                      className="flex-1"
                    />
                  </View>
                </View>
              </Card>
            </Animated.View>
          )}

          {activeTab === 'preferences' && (
            <Animated.View entering={FadeInUp.delay(400).springify()}>
              <Card variant="elevated" padding="lg" className="mb-6">
                <Text className="text-xl font-bold text-neutral-800 mb-6">Housing Preferences</Text>
                
                <View className="gap-6">
                  {Object.entries(sampleUser.preferences).map(([key, value], index) => (
                    <View key={key} className="flex-row items-center">
                      <View className="w-12 h-12 bg-primary-100 rounded-2xl items-center justify-center mr-4">
                        <Text className="text-primary-600 text-lg">
                          {key === 'budget' ? '💰' : 
                           key === 'location' ? '📍' : 
                           key === 'roomType' ? '🏠' : '🎯'}
                        </Text>
                      </View>
                      <View className="flex-1">
                        <Text className="font-bold text-neutral-800 capitalize text-lg mb-1">
                          {key.replace(/([A-Z])/g, ' $1').trim()}
                        </Text>
                        <Text className="text-neutral-600 text-md">{value}</Text>
                      </View>
                      {isEditing && (
                        <TouchableOpacity className="w-8 h-8 items-center justify-center">
                          <Text className="text-primary-500 text-lg">→</Text>
                        </TouchableOpacity>
                      )}
                    </View>
                  ))}
                </View>
              </Card>
            </Animated.View>
          )}

          {activeTab === 'activity' && (
            <Animated.View entering={FadeInUp.delay(400).springify()}>
              <Card variant="elevated" padding="lg" className="mb-6">
                <Text className="text-xl font-bold text-neutral-800 mb-6">Recent Activity</Text>
                
                <View className="gap-4">
                  {[
                    { action: 'Matched with Ahmed K.', time: '2 hours ago', icon: '🤝', color: 'success' },
                    { action: 'Viewed Studio in Agdal', time: '5 hours ago', icon: '👁️', color: 'info' },
                    { action: 'Saved Apartment Near Campus', time: '1 day ago', icon: '❤️', color: 'error' },
                    { action: 'Updated preferences', time: '3 days ago', icon: '⚙️', color: 'warning' }
                  ].map((activity, index) => (
                    <View key={index} className="flex-row items-center p-4 bg-neutral-50 rounded-2xl">
                      <View className="w-12 h-12 bg-white rounded-2xl items-center justify-center mr-4 shadow-ios">
                        <Text className="text-lg">{activity.icon}</Text>
                      </View>
                      <View className="flex-1">
                        <Text className="font-medium text-neutral-800 text-md mb-1">{activity.action}</Text>
                        <Text className="text-neutral-500 text-sm">{activity.time}</Text>
                      </View>
                    </View>
                  ))}
                </View>
              </Card>
            </Animated.View>
          )}
        </View>

        {/* Action Buttons */}
        <Animated.View 
          entering={FadeInUp.delay(500).springify()}
          className="px-6 mb-8"
        >
          <View className="gap-3">
            <Button
              title="Edit Personality Profile"
              onPress={() => {}}
              variant="primary"
              size="lg"
              fullWidth
              icon={<Text className="text-white text-lg">🧠</Text>}
            />
            
            <View className="flex-row gap-3">
              <Button
                title="Share Profile"
                onPress={() => {}}
                variant="outline"
                size="lg"
                className="flex-1"
                icon={<Text className="text-primary-500 text-lg">📤</Text>}
              />
              
              <Button
                title="Settings"
                onPress={() => {}}
                variant="ghost"
                size="lg"
                className="flex-1"
                icon={<Text className="text-neutral-600 text-lg">⚙️</Text>}
              />
            </View>
          </View>
        </Animated.View>

        {/* Bottom Spacer */}
        <View className="h-8" />
      </ScrollView>
    </View>
  );
};
